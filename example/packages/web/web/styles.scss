@import url(https://fonts.googleapis.com/css?family=Roboto);
@import url(https://fonts.googleapis.com/css?family=Material+Icons);

//@import 'package:angular_components/css/material/material';
@import 'package:sharedtheme_example_web/src/themes.g';

/// Force all elements to be transparent by default. This makes theming elements
/// easier because many of the angular components set background colors to white.
///
/// It doesn't effect some elements, for example material-list needed to have
/// its background changed manually.
* {
  background-color: transparent;
}

body {
  @include background-color;
  @include font-body1;
  padding: 0;
  margin: 0;
}

material-button.primary {
  @include primary-button;
}

material-button.secondary {
  @include secondary-button;
}

material-button.tertiary {
  @include tertiary-button;
}

material-button .content {
  text-transform: none;
  // Inherit the colors set by the above mixins.
  color: inherit !important;
  background-color: inherit !important;
  border-radius: inherit !important;
}

material-list {
  @include background-color;
}

material-list-item {

  // Taken from `package:angular_components/material_list/mixins`.
  &:not([separator="present"]) {

    &:hover,
    &:focus,
    &.active {
      @include selected-row-color(background-color);
    }
  }
}


/// Material input hack.
/// This element was much harder than others to share a theme definition with
/// Flutter. However, it is pretty well duplicated here for both outline and
/// underline input types.
material-input[type="text"]:not(.no-theme) {
  padding: 16px 0 0 !important;
  @include background-color;

  .label-text {
    @include background-color;
  }

  .underline {
    display: none;
  }

  .top-section {
    @include input-base;
    margin-bottom: 2px !important;

    .input-container {
      margin: 0 !important;
    }

    .label-text.animated {
      transform: translateY(-50%) translateY(-10px) !important;
      padding: 0 2px;
    }

    /// Copy Flutter input behavior.
    /// hint color: the border and text color.
    /// if no hint color, use primary color for light themes and secondary color
    /// for dark themes.
    &:focus-within {
      @include themify {
        $hint: theme-color('hint');

        @if $hint and $hint !='inherit' {
          border-color: $hint;

          .label-text {
            color: $hint !important;
          }
        }

        @else {
          @if themed('brightness')=='light' {
            $color: theme-color('primary');
            border-color: $color;

            .label-text {
              color: $color !important;
            }
          }

          @else {
            $color: theme-color('secondary');
            border-color: $color;

            .label-text {
              color: $color !important;
            }
          }
        }
      }
    }
  }
}